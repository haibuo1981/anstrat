#! /bin/sh

# Requires:
# Java 1.6+
# ant 1.8

DESC="Vengeful Vikings server application"
ROOT_DIRECTORY=/home/viking/anstrat
SERVER_DIRECTORY=$ROOT_DIRECTORY/anstrat-server
USER=viking
NAME=anstrat
DAEMON="/usr/bin/java"

JAVA_OPTS="-server -Xmx1g"
CLASS=com.anstrat.server.MainServer
CLASSPATH="$ROOT_DIRECTORY/anstrat-server/libs/*:$ROOT_DIRECTORY/anstrat-core/libs/*:$ROOT_DIRECTORY/build/classes"

PATH=/sbin:/usr/sbin:/bin:/usr/bin
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
  # Update and compile server
  (cd $ROOT_DIRECTORY; svn update; ant compile)

  start-stop-daemon --start --background --chdir "$SERVER_DIRECTORY" \
  --pidfile "$PIDFILE" --chuid "$USER" --make-pidfile \
  --exec /bin/bash -- -c "$DAEMON $JAVA_OPTS -cp $CLASSPATH $CLASS > info.log 2> error.log"
}

#
# Function that stops the daemon/service
#
do_stop()
{
  # Kill child process spawned by /bin/bash -c
  bashPID=$(cat $PIDFILE); [ -n "$bashPID" ] && pkill -P "$bashPID"

  # Stop daemon
  start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
  RETVAL="$?"
  rm -f $PIDFILE
  return "$RETVAL"
}

case "$1" in
  start)
  [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
  do_start
  case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  stop)
  [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
    2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
  esac
  ;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
  restart)
  log_daemon_msg "Restarting $DESC" "$NAME"
  do_stop
  case "$?" in
    0|1)
    do_start
    case "$?" in
      0) log_end_msg 0 ;;
      1) log_end_msg 1 ;; # Old process is still running
      *) log_end_msg 1 ;; # Failed to start
    esac
    ;;
    *)
      # Failed to stop
    log_end_msg 1
    ;;
  esac
  ;;
  *)
  echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
  exit 3
  ;;
esac

:
